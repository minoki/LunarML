val _ = "foo" : String16.string;
val _ = #"x" : String16.char;
val _ = String16.size : String16.string -> int;
val 0 = String16.size "";
val 3 = String16.size "foo";
val _ = String16.sub : String16.string * int -> Char16.char;
val #"f" = String16.sub ("foo", 0);
val #"o" = String16.sub ("foo", 1);
val #"o" = String16.sub ("foo", 2);
val #"\u3042" = String16.sub ("\u3042\u{1D400}", 0);
val #"\uD835" = String16.sub ("\u3042\u{1D400}", 1);
val #"\uDC00" = String16.sub ("\u3042\u{1D400}", 2);
(String16.sub ("\u3042\u{1D400}", ~1); print "Bad\n") handle Subscript => print "Good\n";
(String16.sub ("\u3042\u{1D400}", 3); print "Bad\n") handle Subscript => print "Good\n";
val _ = String16.^ : String16.string * String16.string -> String16.string;
print (String16.toString (String16.^ ("Hello ", "world!")) ^ "\n");
val _ = String16.concat : String16.string list -> String16.string;
print (String16.toString (String16.concat ["Standard ", "ML"]) ^ "\n");
val _ = String16.concatWith : String16.string -> String16.string list -> String16.string;
print (String16.toString (String16.concatWith "," ("foo" :: "bar" :: "baz" :: nil)) ^ "\n");
val _ = String16.str : Char16.char -> String16.string;
print (String16.toString (String16.str #"\u3042") ^ "\n");
val _ = String16.implode : Char16.char list -> String16.string;
print (String16.toString (String16.implode [#"i", #"m", #"p", #"l", #"o", #"d", #"e", #"\uD83D", #"\uDE00"]) ^ "\n");
val _ = String16.explode : String16.string -> Char16.char list;
print (String16.toString (String16.concatWith "." (List.map String16.str (String16.explode "xyz\u3042"))) ^ "\n");
val _ = String16.map : (Char16.char -> Char16.char) -> String16.string -> String16.string;
print (String16.toString (String16.map (fn #"e" => #"3" | #"l" => #"1" | #"o" => #"0" | x => x) "Hello world!") ^ "\n");
val _ = String16.translate : (Char16.char -> String16.string) -> String16.string -> String16.string;
print (String16.toString (String16.translate (fn #"H" => "|-|" | #"e" => "3" | #"l" => "|" | #"w" => "vv" | x => String16.str x) "Hello world!") ^ "\n");
